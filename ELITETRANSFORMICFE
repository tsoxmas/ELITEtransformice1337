import pygame
import os
from random import randint
from random import choice

BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600


class Player(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()

        fullname = os.path.join('data', "рат.png")
        self.image = pygame.image.load(fullname).convert()
        #self.image = self.image.convert_alpha()
        self.image.set_colorkey(self.image.get_at((0, 0)))
        self.rect = self.image.get_rect()
        #self.rect.set_alpha()

        self.change_x = 0
        self.change_y = 0

        self.level = None


    def update(self):

        global done

        self.calc_grav()

        self.rect.x += self.change_x

        block_hit_list = pygame.sprite.spritecollide(self, self.level.platform_list, False)
        for block in block_hit_list:
            if self.change_x > 0:
                self.rect.right = block.rect.left
            elif self.change_x < 0:
                self.rect.left = block.rect.right

        self.rect.y += self.change_y

        block_hit_list = pygame.sprite.spritecollide(self, self.level.platform_list, False)
        for block in block_hit_list:

            if self.change_y > 0:
                self.rect.bottom = block.rect.top
            elif self.change_y < 0:
                self.rect.top = block.rect.bottom

            self.change_y = 0

        if pygame.sprite.spritecollideany(self, self.level.goal):
            pygame.quit()

    def calc_grav(self):
        if self.change_y == 0:
            self.change_y = 1
        else:
            self.change_y += .35

        if self.rect.y >= SCREEN_HEIGHT - self.rect.height and self.change_y >= 0:
            self.change_y = 0
            self.rect.y = SCREEN_HEIGHT - self.rect.height

    def jump(self):

        self.rect.y += 2
        platform_hit_list = pygame.sprite.spritecollide(self, self.level.platform_list, False)
        self.rect.y -= 2

        if len(platform_hit_list) > 0 or self.rect.bottom >= SCREEN_HEIGHT:
            self.change_y = -10

    def go_left(self):
        self.change_x = -6

    def go_right(self):
        self.change_x = 6

    def stop(self):
        self.change_x = 0


class Cheese(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()

        fullname = os.path.join('data', "tide pods.png")
        self.image = pygame.image.load(fullname).convert()
        #self.image = self.image.convert_alpha()
        self.image.set_colorkey(self.image.get_at((0, 0)))
        self.rect = self.image.get_rect()
        # self.rect.set_alpha()

        self.change_x = 0
        self.change_y = 0

        self.level = None


class Platform(pygame.sprite.Sprite):

    def __init__(self, width, height):

        super().__init__()

        fullname = os.path.join('data', "бревно.png")
        self.image = pygame.image.load(fullname).convert()
        #self.image = self.image.convert_alpha()
        self.image.set_colorkey(self.image.get_at((0, 0)))
        self.rect = self.image.get_rect()


class Level(object):

    def __init__(self, player):
        self.platform_list = pygame.sprite.Group()
        self.enemy_list = pygame.sprite.Group()
        self.player = player
        self.goal = pygame.sprite.Group()

        self.background = None

    def update(self):

        self.platform_list.update()
        self.enemy_list.update()
        self.goal.update()

    def draw(self, screen):

        #screen.fill(BLUE)
        fullname = os.path.join('data', "прекрасный лес.png")
        background_image = pygame.image.load(fullname).convert()
        screen.blit(background_image, [0, 0])

        self.platform_list.draw(screen)
        self.enemy_list.draw(screen)


class Level_01(Level):

    def __init__(self, player):

        Level.__init__(self, player)

        self.l_list = [[210, 30, 400, 500]]
        for i in range(4):
            lst_x = self.l_list[-1][2]
            new_x_left = (lst_x - randint(300, 500)) % 600
            new_x_right = (lst_x + randint(300, 500)) % 600
            #while not (600 < abs(new_x - lst_x) < 260):
            #    new_x = randint(25, 576)
            self.l_list.append([210, 30, choice([new_x_left, new_x_right]), self.l_list[-1][3] - 100])

        for platform in self.l_list:
            block = Platform(platform[0], platform[1])
            block.rect.x = platform[2]
            block.rect.y = platform[3]
            block.player = self.player
            self.platform_list.add(block)

        cheese = Cheese()
        cheese.rect.x = self.l_list[-1][2] + self.l_list[-1][0] // 2
        cheese.rect.y = self.l_list[-1][3] - self.l_list[-1][1] - 20
        self.goal.add(cheese)



def main():

    pygame.init()

    size = [SCREEN_WIDTH, SCREEN_HEIGHT]
    screen = pygame.display.set_mode(size)

    pygame.display.set_caption("Rat rat rat")

    player = Player()

    level_list = [Level_01(player)]
    current_level_no = 0

    current_level = level_list[current_level_no]

    active_sprite_list = pygame.sprite.Group()
    player.level = current_level

    player.rect.x = 340
    player.rect.y = SCREEN_HEIGHT - player.rect.height
    active_sprite_list.add(player)

    active_sprite_list.add(current_level.goal)


    done = False

    clock = pygame.time.Clock()

    while not done:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                done = True

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    player.go_left()
                if event.key == pygame.K_RIGHT:
                    player.go_right()
                if event.key == pygame.K_UP:
                    player.jump()

            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT and player.change_x < 0:
                    player.stop()
                if event.key == pygame.K_RIGHT and player.change_x > 0:
                    player.stop()

        active_sprite_list.update()
        current_level.update()
        if player.rect.right > SCREEN_WIDTH:
            player.rect.right = SCREEN_WIDTH
        if player.rect.left < 0:
            player.rect.left = 0
        current_level.draw(screen)
        active_sprite_list.draw(screen)
        clock.tick(60)
        pygame.display.flip()
    pygame.quit()


while 1:
    main()
